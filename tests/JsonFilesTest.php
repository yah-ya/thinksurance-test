<?php

use PHPUnit\Framework\TestCase;

class JsonFilesTest extends TestCase
{
    // Create Fake JSON Files -- Done
    // Get JSON Files -- Done
    // Check If Excel JSON has the certain KEYS -- Done
    // Create Object with row data -- Done

    function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->generateJsonFiles();
    }

    public function test_files_exists()
    {
        $controller = new \App\Controllers\PersonController();
        $files = $controller->listFiles();
        $this->assertIsArray($files);
    }

    public function test_file_read_file_data()
    {
        $controller = new \App\Controllers\PersonController();
        $files = $controller->listFiles();
        $content = $controller->getFileData('public/'.reset($files));
        $this->assertIsString($content);
        $json = json_decode($content);
        $this->assertIsObject($json);
    }

    public function test_file_create_object()
    {
        $controller = new \App\Controllers\PersonController();
        $files = $controller->listFiles();
        $contents = $controller->getFileData('public/'.reset($files));
        $obj = $controller->createPerson($contents);
        $this->assertIsObject($obj);
    }


    // ---
    private function generateJsonFiles()
    {
        for($i=0;$i<5;$i++) {
           $this->create();
        }
    }

    private function create()
    {
       $controller = new \App\Controllers\PersonController();
       $controller->createJsonFile();
    }

    private function removeFiles()
    {
        $controller = new \App\Controllers\PersonController();
        $files = $controller->listFiles();
        $disk = new \App\Lib\Services\Disk();
        foreach($files as $file) {
            $disk->remove($file);
        }
    }
}
